package com.appspot.geigerapi.entity;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.jdo.PersistenceManager;
import javax.jdo.Query;
import javax.jdo.annotations.IdGeneratorStrategy;
import javax.jdo.annotations.PersistenceCapable;
import javax.jdo.annotations.IdentityType;
import javax.jdo.annotations.Persistent;
import javax.jdo.annotations.PrimaryKey;
import javax.ws.rs.WebApplicationException;
import javax.xml.bind.annotation.XmlRootElement;

import com.appspot.geigerapi.auth.Authorization;

@XmlRootElement
@PersistenceCapable(identityType = IdentityType.APPLICATION)
public final class Radiation {
		public static final DateFormat DATE_FORMAT = new SimpleDateFormat("yyyy/MM/dd hh:mm:ss");
	
		@PrimaryKey
		@Persistent(valueStrategy = IdGeneratorStrategy.IDENTITY)
		private Long id;
		
		@Persistent
		private String email;

		@Persistent
		private Date datetime;

		@Persistent
		private String label;
		
		@Persistent
		private int valuetype;

		@Persistent
		private double radiovalue;

		@Persistent
		private double lat;

		@Persistent
		private double lon;
		
		public Radiation(){
			this(Authorization.getEmail(),new Date(),"",0,0.0d,0.0d,0.0d);
		}
		
		public Radiation(String email,Date datetime, String label, int valuetype,
				double radiovalue, double latitude, double longtitude) {
			super();
			this.email = email;
			this.datetime = datetime;
			this.label = label;
			this.valuetype = valuetype;
			this.radiovalue = radiovalue;
			this.lat = latitude;
			this.lon = longtitude;
		}

		public Long getId() {
			return id;
		}

		public void setId(Long id) {
			this.id = id;
		}

		public String getEmail() {
			return email;
		}

		public void setEmail(String email) {
			this.email = email;
		}

		public String getLabel() {
			return label;
		}

		public void setLabel(String label) {
			this.label = label;
		}

		public Date getDatetime() {
			return datetime;
		}

		public void setDatetime(Date datetime) {
			this.datetime = datetime;
		}

		public int getValuetype() {
			return valuetype;
		}

		public void setValuetype(int valuetype) {
			this.valuetype = valuetype;
		}

		public double getRadiovalue() {
			return radiovalue;
		}

		public void setRadiovalue(double radiovalue) {
			this.radiovalue = radiovalue;
		}

		public double getLat() {
			return lat;
		}

		public void setLat(double latitude) {
			this.lat = latitude;
		}

		public double getLon() {
			return lon;
		}

		public void setLon(double longtitude) {
			this.lon = longtitude;
		}
		
		private static final String dupCond = "datetime==pDatetime && label==pLabel && valuetype==pValuetype && lat==pLat && lon==pLon && radiovalue==pRadiovalue";			
		private static final String dupDeclare = "java.util.Date pDatetime,String pLabel,int pValuetype,double pLat,double pLon,double pRadiovalue";			
		public boolean hasDulicated(PersistenceManager pm){
			Query query = pm.newQuery(getClass(),dupCond);
			query.declareParameters(dupDeclare);
			@SuppressWarnings("unchecked")
			List<Radiation> radiations = (List<Radiation>) query.executeWithArray(datetime,label,valuetype,lat,lon,radiovalue);
			return !radiations.isEmpty();
		}

		public void checkOwned() {
			if(!getEmail().equals(Authorization.getEmail())){
				throw new WebApplicationException(403);
			}
		}

		/* (non-Javadoc)
		 * @see java.lang.Object#hashCode()
		 * Automatic Generated by Eclipse.
		 * Checking all properties except "id" and "email"
		 */
		@Override
		public int hashCode() {
			final int prime = 31;
			int result = 1;
			result = prime * result
					+ ((datetime == null) ? 0 : datetime.hashCode());
			result = prime * result + ((label == null) ? 0 : label.hashCode());
			long temp;
			temp = Double.doubleToLongBits(lat);
			result = prime * result + (int) (temp ^ (temp >>> 32));
			temp = Double.doubleToLongBits(lon);
			result = prime * result + (int) (temp ^ (temp >>> 32));
			temp = Double.doubleToLongBits(radiovalue);
			result = prime * result + (int) (temp ^ (temp >>> 32));
			result = prime * result + valuetype;
			return result;
		}

		/* (non-Javadoc)
		 * @see java.lang.Object#equals(java.lang.Object)
		 * Automatic Generated by Eclipse.
		 * Checking all properties except "id" and "email"
		 */
		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			Radiation other = (Radiation) obj;
			if (datetime == null) {
				if (other.datetime != null)
					return false;
			} else if (!datetime.equals(other.datetime))
				return false;
			if (label == null) {
				if (other.label != null)
					return false;
			} else if (!label.equals(other.label))
				return false;
			if (Double.doubleToLongBits(lat) != Double
					.doubleToLongBits(other.lat))
				return false;
			if (Double.doubleToLongBits(lon) != Double
					.doubleToLongBits(other.lon))
				return false;
			if (Double.doubleToLongBits(radiovalue) != Double
					.doubleToLongBits(other.radiovalue))
				return false;
			if (valuetype != other.valuetype)
				return false;
			return true;
		}

		
}
		
